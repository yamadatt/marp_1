{"version":3,"file":"3.1.2.js","names":["_nodeUtil","require","_matchIndex","_regx","_interopRequireDefault","_regexp","e","__esModule","default","rx","regx","reporter","context","Syntax","RuleError","report","fixer","getSource","Str","node","isUserWrittenNode","text","matchReg","japaneseRegExp","katakakana","matchAll","forEach","match","input","captureGroups","test","captureGroup","index","fix","replaceTextRange","module","exports","linter"],"sources":["../src/3.1.2.js"],"sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport { isUserWrittenNode } from \"./util/node-util\";\nimport { matchAll } from \"match-index\";\nimport regx from \"regx\";\nimport { japaneseRegExp } from \"./util/regexp\";\nconst rx = regx(\"g\");\n/*\n3.1.2. 全角文字どうし\n\n原則として、全角文字どうしの間にスペースを入れません。ただしカタカナ複合語の場合を除きます。\n「2.1.7 カタカナ複合語」を参照してください。\n */\nfunction reporter(context) {\n    let { Syntax, RuleError, report, fixer, getSource } = context;\n    return {\n        [Syntax.Str](node) {\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            const text = getSource(node);\n            // 全角同士の間は半角スペースを入れない\n            const matchReg = rx`${japaneseRegExp}( )${japaneseRegExp}`;\n            const katakakana = /[ァ-ヶ]( )[ァ-ヶ]/;\n            matchAll(text, matchReg).forEach((match) => {\n                const { input, captureGroups } = match;\n                // ただしカタカナ複合語の場合を除きます。\n                if (katakakana.test(input)) {\n                    return;\n                }\n                captureGroups.forEach((captureGroup) => {\n                    const index = captureGroup.index;\n                    report(\n                        node,\n                        new RuleError(\"原則として、全角文字どうしの間にスペースを入れません。\", {\n                            index: index,\n                            fix: fixer.replaceTextRange([index, index + 1], \"\")\n                        })\n                    );\n                });\n            });\n        }\n    };\n}\nmodule.exports = {\n    linter: reporter,\n    fixer: reporter\n};\n"],"mappings":"AAAA;AACA,YAAY;;AACZ,IAAAA,SAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAC,sBAAA,CAAAH,OAAA;AACA,IAAAI,OAAA,GAAAJ,OAAA;AAA+C,SAAAG,uBAAAE,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAC/C,MAAMG,EAAE,GAAG,IAAAC,aAAI,EAAC,GAAG,CAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQA,CAACC,OAAO,EAAE;EACvB,IAAI;IAAEC,MAAM;IAAEC,SAAS;IAAEC,MAAM;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGL,OAAO;EAC7D,OAAO;IACH,CAACC,MAAM,CAACK,GAAG,EAAEC,IAAI,EAAE;MACf,IAAI,CAAC,IAAAC,2BAAiB,EAACD,IAAI,EAAEP,OAAO,CAAC,EAAE;QACnC;MACJ;MACA,MAAMS,IAAI,GAAGJ,SAAS,CAACE,IAAI,CAAC;MAC5B;MACA,MAAMG,QAAQ,GAAGb,EAAE,GAAGc,sBAAc,MAAMA,sBAAc,EAAE;MAC1D,MAAMC,UAAU,GAAG,eAAe;MAClC,IAAAC,oBAAQ,EAACJ,IAAI,EAAEC,QAAQ,CAAC,CAACI,OAAO,CAAEC,KAAK,IAAK;QACxC,MAAM;UAAEC,KAAK;UAAEC;QAAc,CAAC,GAAGF,KAAK;QACtC;QACA,IAAIH,UAAU,CAACM,IAAI,CAACF,KAAK,CAAC,EAAE;UACxB;QACJ;QACAC,aAAa,CAACH,OAAO,CAAEK,YAAY,IAAK;UACpC,MAAMC,KAAK,GAAGD,YAAY,CAACC,KAAK;UAChCjB,MAAM,CACFI,IAAI,EACJ,IAAIL,SAAS,CAAC,6BAA6B,EAAE;YACzCkB,KAAK,EAAEA,KAAK;YACZC,GAAG,EAAEjB,KAAK,CAACkB,gBAAgB,CAAC,CAACF,KAAK,EAAEA,KAAK,GAAG,CAAC,CAAC,EAAE,EAAE;UACtD,CAAC,CACL,CAAC;QACL,CAAC,CAAC;MACN,CAAC,CAAC;IACN;EACJ,CAAC;AACL;AACAG,MAAM,CAACC,OAAO,GAAG;EACbC,MAAM,EAAE1B,QAAQ;EAChBK,KAAK,EAAEL;AACX,CAAC","ignoreList":[]}
{"version":3,"file":"2.1.10.js","names":["_nodeUtil","require","_matchIndex","reporter","context","Syntax","RuleError","report","fixer","getSource","Str","node","isUserWrittenNode","text","numberWithComma","strictMatchReg","match","exec","matchedString","matchCaptureGroupAll","forEach","subMatch","index","fix","replaceTextRange","module","exports","linter"],"sources":["../src/2.1.10.js"],"sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n2.1.10.算用数字の位取りの表記\n桁区切りには「カンマ」、小数点には「ピリオド」を使います。\nただし桁区切りの「カンマ」は省略する場合があります。\n */\nimport { isUserWrittenNode } from \"./util/node-util\";\nimport { matchCaptureGroupAll } from \"match-index\";\nfunction reporter(context) {\n    let { Syntax, RuleError, report, fixer, getSource } = context;\n    return {\n        [Syntax.Str](node) {\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            let text = getSource(node);\n            // 数字,で絞って\n            let numberWithComma = /([\\d,]+)/g;\n            // 0,xxx な文字列を検出する\n            let strictMatchReg = /^0+(,)\\d+$/;\n            let match;\n            while ((match = numberWithComma.exec(text))) {\n                // この段階では 10,000 も含まれている\n                // ^0,xxx をだけを取り出す\n                let matchedString = match[0];\n                matchCaptureGroupAll(matchedString, strictMatchReg).forEach((subMatch) => {\n                    const { index } = subMatch;\n                    report(\n                        node,\n                        new RuleError(\"小数点には「ピリオド」を使います。\", {\n                            index: match.index + index,\n                            fix: fixer.replaceTextRange([match.index + index, match.index + index + 1], \".\")\n                        })\n                    );\n                });\n            }\n        }\n    };\n}\nmodule.exports = {\n    linter: reporter,\n    fixer: reporter\n};\n"],"mappings":"AAAA;AACA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA,IAAAA,SAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AACA,SAASE,QAAQA,CAACC,OAAO,EAAE;EACvB,IAAI;IAAEC,MAAM;IAAEC,SAAS;IAAEC,MAAM;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGL,OAAO;EAC7D,OAAO;IACH,CAACC,MAAM,CAACK,GAAG,EAAEC,IAAI,EAAE;MACf,IAAI,CAAC,IAAAC,2BAAiB,EAACD,IAAI,EAAEP,OAAO,CAAC,EAAE;QACnC;MACJ;MACA,IAAIS,IAAI,GAAGJ,SAAS,CAACE,IAAI,CAAC;MAC1B;MACA,IAAIG,eAAe,GAAG,WAAW;MACjC;MACA,IAAIC,cAAc,GAAG,YAAY;MACjC,IAAIC,KAAK;MACT,OAAQA,KAAK,GAAGF,eAAe,CAACG,IAAI,CAACJ,IAAI,CAAC,EAAG;QACzC;QACA;QACA,IAAIK,aAAa,GAAGF,KAAK,CAAC,CAAC,CAAC;QAC5B,IAAAG,gCAAoB,EAACD,aAAa,EAAEH,cAAc,CAAC,CAACK,OAAO,CAAEC,QAAQ,IAAK;UACtE,MAAM;YAAEC;UAAM,CAAC,GAAGD,QAAQ;UAC1Bd,MAAM,CACFI,IAAI,EACJ,IAAIL,SAAS,CAAC,mBAAmB,EAAE;YAC/BgB,KAAK,EAAEN,KAAK,CAACM,KAAK,GAAGA,KAAK;YAC1BC,GAAG,EAAEf,KAAK,CAACgB,gBAAgB,CAAC,CAACR,KAAK,CAACM,KAAK,GAAGA,KAAK,EAAEN,KAAK,CAACM,KAAK,GAAGA,KAAK,GAAG,CAAC,CAAC,EAAE,GAAG;UACnF,CAAC,CACL,CAAC;QACL,CAAC,CAAC;MACN;IACJ;EACJ,CAAC;AACL;AACAG,MAAM,CAACC,OAAO,GAAG;EACbC,MAAM,EAAExB,QAAQ;EAChBK,KAAK,EAAEL;AACX,CAAC","ignoreList":[]}
{"version":3,"file":"node-util.js","names":["Object","defineProperty","exports","value","isUserWrittenNode","_textlintRuleHelper","require","node","context","helper","RuleHelper","Syntax","type","Str","isPlainStrNode","isChildNode","Link","Image","BlockQuote","Emphasis"],"sources":["../../src/util/node-util.js"],"sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport { RuleHelper } from \"textlint-rule-helper\";\n\n/**\n * ユーザーが書いたと推測されるNodeかどうかを判定する\n * ユーザーが管理できないテキストは対象外としたいため。\n * @param node\n * @param context\n * @returns {boolean}\n */\nexport function isUserWrittenNode(node, context) {\n    let helper = new RuleHelper(context);\n    let Syntax = context.Syntax;\n    // Strがユーザーに書かれたと断定できるNodeかを判定する\n    // LinkやStrongなどはユーザーが書いていない可能性があるStrなので除外する\n    if (node.type === Syntax.Str) {\n        return helper.isPlainStrNode(node);\n    }\n    // ブロック要素の互換性のため古い除外ルールも残す\n    return !helper.isChildNode(node, [Syntax.Link, Syntax.Image, Syntax.BlockQuote, Syntax.Emphasis]);\n}\n"],"mappings":"AAAA;AACA,YAAY;;AAACA,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,iBAAA,GAAAA,iBAAA;AACb,IAAAC,mBAAA,GAAAC,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASF,iBAAiBA,CAACG,IAAI,EAAEC,OAAO,EAAE;EAC7C,IAAIC,MAAM,GAAG,IAAIC,8BAAU,CAACF,OAAO,CAAC;EACpC,IAAIG,MAAM,GAAGH,OAAO,CAACG,MAAM;EAC3B;EACA;EACA,IAAIJ,IAAI,CAACK,IAAI,KAAKD,MAAM,CAACE,GAAG,EAAE;IAC1B,OAAOJ,MAAM,CAACK,cAAc,CAACP,IAAI,CAAC;EACtC;EACA;EACA,OAAO,CAACE,MAAM,CAACM,WAAW,CAACR,IAAI,EAAE,CAACI,MAAM,CAACK,IAAI,EAAEL,MAAM,CAACM,KAAK,EAAEN,MAAM,CAACO,UAAU,EAAEP,MAAM,CAACQ,QAAQ,CAAC,CAAC;AACrG","ignoreList":[]}
{"version":3,"file":"textlint-rule-no-hankaku-kana.js","names":["Object","defineProperty","exports","value","report","default","_textlintRuleHelper","require","HankakuRegExp","reporter","context","Syntax","RuleError","fixer","locator","getSource","helper","RuleHelper","Str","node","isPlainStrNode","nodeText","match","matchAll","_match$index","text","index","range","length","ruleError","concat","padding","fix","replaceTextRange","normalize","_default","linter"],"sources":["../src/textlint-rule-no-hankaku-kana.ts"],"sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport { RuleHelper } from \"textlint-rule-helper\";\nimport { TextlintRuleModule } from \"@textlint/types\";\n\nconst HankakuRegExp = /([\\uff61-\\uff9f]+)/g;\nexport type Options = {};\nexport const report: TextlintRuleModule<Options> = function reporter(context) {\n    const { Syntax, RuleError, fixer, report, locator, getSource } = context;\n    const helper = new RuleHelper(context);\n    return {\n        [Syntax.Str](node) {\n            if (!helper.isPlainStrNode(node)) {\n                return;\n            }\n            const nodeText = getSource(node);\n            for (const match of nodeText.matchAll(HankakuRegExp)) {\n                const text = match[0];\n                const index = match.index ?? 0;\n                const range = [index, index + text.length] as const;\n                const ruleError = new RuleError(`Disallow to use 半角カタカナ: \"${text}\"`, {\n                    padding: locator.range(range),\n                    fix: fixer.replaceTextRange(range, text.normalize('NFKC')),\n                });\n                report(node, ruleError);\n            }\n        }\n    }\n};\nexport default {\n    linter: report,\n    fixer: report,\n};\n"],"mappings":"AAAA;AACA,YAAY;;AAACA,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,MAAA,GAAAF,OAAA,CAAAG,OAAA;AACb,IAAAC,mBAAA,GAAAC,OAAA;AAGA,IAAMC,aAAa,GAAG,qBAAqB;AAEpC,IAAMJ,MAAmC,GAAG,SAASK,QAAQA,CAACC,OAAO,EAAE;EAC1E,IAAM;IAAEC,MAAM;IAAEC,SAAS;IAAEC,KAAK;IAAET,MAAM;IAAEU,OAAO;IAAEC;EAAU,CAAC,GAAGL,OAAO;EACxE,IAAMM,MAAM,GAAG,IAAIC,8BAAU,CAACP,OAAO,CAAC;EACtC,OAAO;IACH,CAACC,MAAM,CAACO,GAAG,EAAEC,IAAI,EAAE;MACf,IAAI,CAACH,MAAM,CAACI,cAAc,CAACD,IAAI,CAAC,EAAE;QAC9B;MACJ;MACA,IAAME,QAAQ,GAAGN,SAAS,CAACI,IAAI,CAAC;MAChC,KAAK,IAAMG,KAAK,IAAID,QAAQ,CAACE,QAAQ,CAACf,aAAa,CAAC,EAAE;QAAA,IAAAgB,YAAA;QAClD,IAAMC,IAAI,GAAGH,KAAK,CAAC,CAAC,CAAC;QACrB,IAAMI,KAAK,IAAAF,YAAA,GAAGF,KAAK,CAACI,KAAK,cAAAF,YAAA,cAAAA,YAAA,GAAI,CAAC;QAC9B,IAAMG,KAAK,GAAG,CAACD,KAAK,EAAEA,KAAK,GAAGD,IAAI,CAACG,MAAM,CAAU;QACnD,IAAMC,SAAS,GAAG,IAAIjB,SAAS,4DAAAkB,MAAA,CAA6BL,IAAI,SAAK;UACjEM,OAAO,EAAEjB,OAAO,CAACa,KAAK,CAACA,KAAK,CAAC;UAC7BK,GAAG,EAAEnB,KAAK,CAACoB,gBAAgB,CAACN,KAAK,EAAEF,IAAI,CAACS,SAAS,CAAC,MAAM,CAAC;QAC7D,CAAC,CAAC;QACF9B,MAAM,CAACe,IAAI,EAAEU,SAAS,CAAC;MAC3B;IACJ;EACJ,CAAC;AACL,CAAC;AAAC3B,OAAA,CAAAE,MAAA,GAAAA,MAAA;AAAA,IAAA+B,QAAA,GACa;EACXC,MAAM,EAAEhC,MAAM;EACdS,KAAK,EAAET;AACX,CAAC;AAAAF,OAAA,CAAAG,OAAA,GAAA8B,QAAA"}
{"version":3,"file":"textlint-rule-no-unmatched-pair.js","names":["_sentenceSplitter","require","_PairMaker","_SourceCode","_textlintRuleHelper","report","context","Syntax","RuleError","ignoreNodeManager","IgnoreNodeManager","Paragraph","node","sentences","splitAST","ignoreChildrenByTypes","CodeBlock","Code","Link","Strong","Emphasis","BlockQuote","Comment","children","filter","type","SentenceSplitterSyntax","Sentence","forEach","sentence","source","SourceCode","raw","pairMaker","PairMaker","sentenceIndex","range","canRead","characterIndex","index","isIgnoredIndex","mark","peek","contextLocations","contextLocation","pairMark","start","end","key","module","exports"],"sources":["../src/textlint-rule-no-unmatched-pair.js"],"sourcesContent":["// MIT Â© 2018 azu\nimport { splitAST, SentenceSplitterSyntax } from \"sentence-splitter\";\nimport { PairMaker } from \"./parser/PairMaker.js\";\nimport { SourceCode } from \"./parser/SourceCode.js\";\nimport { IgnoreNodeManager } from \"textlint-rule-helper\";\n\nconst report = (context) => {\n    const { Syntax, report, RuleError } = context;\n    const ignoreNodeManager = new IgnoreNodeManager();\n    return {\n        [Syntax.Paragraph](node) {\n            const sentences = splitAST(node);\n            ignoreNodeManager.ignoreChildrenByTypes(node, [\n                Syntax.CodeBlock,\n                Syntax.Code,\n                Syntax.Link,\n                Syntax.Strong,\n                Syntax.Emphasis,\n                Syntax.BlockQuote,\n                Syntax.Comment\n            ]);\n            sentences.children\n                .filter((node) => node.type === SentenceSplitterSyntax.Sentence)\n                .forEach((sentence) => {\n                    const source = new SourceCode(sentence.raw);\n                    const pairMaker = new PairMaker();\n                    const sentenceIndex = sentence.range[0];\n                    while (source.canRead) {\n                        // If the character is in ignored range, skip it\n                        const characterIndex = sentenceIndex + source.index;\n                        // console.log(characterIndex, source.text[source.index], ignoreNodeManager.isIgnoredIndex(characterIndex));\n                        if (!ignoreNodeManager.isIgnoredIndex(characterIndex)) {\n                            pairMaker.mark(source);\n                        }\n                        source.peek();\n                    }\n                    // Report Error for each existing context keys\n                    source.contextLocations.forEach((contextLocation) => {\n                        report(\n                            node,\n                            new RuleError(\n                                `Cannot find a pairing character for ${contextLocation.pairMark.start}.\n                    \nYou should close this sentence with ${contextLocation.pairMark.end}.\nThis pair of marks is called ${contextLocation.pairMark.key}.`,\n                                {\n                                    index: sentenceIndex - node.range[0] + contextLocation.index\n                                }\n                            )\n                        );\n                    });\n                });\n        }\n    };\n};\n\nmodule.exports = report;\n"],"mappings":";;AACA,IAAAA,iBAAA,GAAAC,OAAA;AACA,IAAAC,UAAA,GAAAD,OAAA;AACA,IAAAE,WAAA,GAAAF,OAAA;AACA,IAAAG,mBAAA,GAAAH,OAAA;AAJA;;AAMA,MAAMI,MAAM,GAAIC,OAAO,IAAK;EACxB,MAAM;IAAEC,MAAM;IAAEF,MAAM;IAAEG;EAAU,CAAC,GAAGF,OAAO;EAC7C,MAAMG,iBAAiB,GAAG,IAAIC,qCAAiB,CAAC,CAAC;EACjD,OAAO;IACH,CAACH,MAAM,CAACI,SAAS,EAAEC,IAAI,EAAE;MACrB,MAAMC,SAAS,GAAG,IAAAC,0BAAQ,EAACF,IAAI,CAAC;MAChCH,iBAAiB,CAACM,qBAAqB,CAACH,IAAI,EAAE,CAC1CL,MAAM,CAACS,SAAS,EAChBT,MAAM,CAACU,IAAI,EACXV,MAAM,CAACW,IAAI,EACXX,MAAM,CAACY,MAAM,EACbZ,MAAM,CAACa,QAAQ,EACfb,MAAM,CAACc,UAAU,EACjBd,MAAM,CAACe,OAAO,CACjB,CAAC;MACFT,SAAS,CAACU,QAAQ,CACbC,MAAM,CAAEZ,IAAI,IAAKA,IAAI,CAACa,IAAI,KAAKC,wCAAsB,CAACC,QAAQ,CAAC,CAC/DC,OAAO,CAAEC,QAAQ,IAAK;QACnB,MAAMC,MAAM,GAAG,IAAIC,sBAAU,CAACF,QAAQ,CAACG,GAAG,CAAC;QAC3C,MAAMC,SAAS,GAAG,IAAIC,oBAAS,CAAC,CAAC;QACjC,MAAMC,aAAa,GAAGN,QAAQ,CAACO,KAAK,CAAC,CAAC,CAAC;QACvC,OAAON,MAAM,CAACO,OAAO,EAAE;UACnB;UACA,MAAMC,cAAc,GAAGH,aAAa,GAAGL,MAAM,CAACS,KAAK;UACnD;UACA,IAAI,CAAC9B,iBAAiB,CAAC+B,cAAc,CAACF,cAAc,CAAC,EAAE;YACnDL,SAAS,CAACQ,IAAI,CAACX,MAAM,CAAC;UAC1B;UACAA,MAAM,CAACY,IAAI,CAAC,CAAC;QACjB;QACA;QACAZ,MAAM,CAACa,gBAAgB,CAACf,OAAO,CAAEgB,eAAe,IAAK;UACjDvC,MAAM,CACFO,IAAI,EACJ,IAAIJ,SAAS,CACT,uCAAuCoC,eAAe,CAACC,QAAQ,CAACC,KAAK;AACrG;AACA,sCAAsCF,eAAe,CAACC,QAAQ,CAACE,GAAG;AAClE,+BAA+BH,eAAe,CAACC,QAAQ,CAACG,GAAG,GAAG,EAC9B;YACIT,KAAK,EAAEJ,aAAa,GAAGvB,IAAI,CAACwB,KAAK,CAAC,CAAC,CAAC,GAAGQ,eAAe,CAACL;UAC3D,CACJ,CACJ,CAAC;QACL,CAAC,CAAC;MACN,CAAC,CAAC;IACV;EACJ,CAAC;AACL,CAAC;AAEDU,MAAM,CAACC,OAAO,GAAG7C,MAAM","ignoreList":[]}
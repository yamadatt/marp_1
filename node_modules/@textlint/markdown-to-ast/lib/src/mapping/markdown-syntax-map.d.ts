import { ASTNodeTypes } from "@textlint/ast-node-types";
export declare const SyntaxMap: {
    readonly root: ASTNodeTypes.Document;
    readonly paragraph: ASTNodeTypes.Paragraph;
    readonly blockquote: ASTNodeTypes.BlockQuote;
    readonly listItem: ASTNodeTypes.ListItem;
    readonly list: ASTNodeTypes.List;
    readonly Bullet: "Bullet";
    readonly heading: ASTNodeTypes.Header;
    readonly code: ASTNodeTypes.CodeBlock;
    readonly HtmlBlock: ASTNodeTypes.HtmlBlock;
    readonly thematicBreak: ASTNodeTypes.HorizontalRule;
    readonly text: ASTNodeTypes.Str;
    readonly break: ASTNodeTypes.Break;
    readonly emphasis: ASTNodeTypes.Emphasis;
    readonly strong: ASTNodeTypes.Strong;
    readonly html: ASTNodeTypes.Html;
    readonly link: ASTNodeTypes.Link;
    readonly image: ASTNodeTypes.Image;
    readonly inlineCode: ASTNodeTypes.Code;
    readonly delete: ASTNodeTypes.Delete;
    readonly yaml: "Yaml";
    readonly table: "Table";
    readonly tableRow: "TableRow";
    readonly tableCell: "TableCell";
    readonly linkReference: "LinkReference";
    readonly imageReference: "ImageReference";
    readonly footnoteReference: "FootnoteReference";
    readonly definition: "Definition";
    /**
     * @deprecated
     */
    readonly ReferenceDef: ASTNodeTypes.ReferenceDef;
};
//# sourceMappingURL=markdown-syntax-map.d.ts.map
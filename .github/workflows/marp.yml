name: Generate Marp PDF and PowerPoint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - name: Timeline
      uses: Kesin11/actions-timeline@v2.0.3

    - name: Check out repository
      uses: actions/checkout@v4

    - name: Link Checker
      id: lychee
      uses: lycheeverse/lychee-action@v2
      with:
        fail: false

    - name: Create Issue From File
      # Only create an issue if there are broken links
      if: steps.lychee.outputs.exit_code != 0 
      uses: peter-evans/create-issue-from-file@v5
      with:
        title: Link Checker Report
        content-filepath: ./lychee/out.md
        labels: report, automated issue



    - name: Setup node/npm
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    - name: textlint-github-pr-check
      uses: tsuyoshicho/action-textlint@v3
      with:
        github_token: ${{ secrets.github_token }}
        reporter: github-pr-check
        textlint_flags: "*.md"

    - name: textlint-github-check
      uses: tsuyoshicho/action-textlint@v3
      with:
        github_token: ${{ secrets.github_token }}
        reporter: github-check
        textlint_flags: "*.md"
    - name: textlint-github-pr-review
      uses: tsuyoshicho/action-textlint@v3
      with:
        github_token: ${{ secrets.github_token }}
        reporter: github-pr-review
        textlint_flags: "*.md"


    - name: Convert Markdown into HTML and PDF
      uses: KoharaKazuya/marp-cli-action@v4
      with:
        output: ./

    - name: Upload PDF
      uses: actions/upload-artifact@v4
      with:
        name: my-artifact
        path: ./
#
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v3
      with:
        publish-dir: ./
        production-deploy: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}